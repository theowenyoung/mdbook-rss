on:
  workflow_dispatch:
  push:
    tags:
    - '*'
name: Build Package

jobs:
  release:
    name: Release Packaging
    env:
      PROJECT_NAME_UNDERSCORE: mdbook-rss
    runs-on: '${{ matrix.os }}'    
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: .exe
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: '.zip'
            archive_type: zip
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: '.tar.gz'
            archive_type: tar
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            suffix: '.tar.gz'
            archive_type: tar
          - os: macos-latest
            target: aarch64-apple-darwin
            suffix: '.zip'
            archive_type: zip

    steps:
      - id: get_repository_name
        run: echo ::set-output name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")
        shell: bash
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
        if: matrix.target == 'windows-2022'
        with:
          arch: amd64_x86
          spectre: true
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: '${{ runner.os }}-cargo-registry-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: '${{ runner.os }}-cargo-index-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/cargo@v1
        env:
          REPOSITORY_NAME: '${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}'
        with:
          command: build
          args: '--release'
      - name: Archive Release
        uses: thedoctor0/zip-release@main
        with:
          type: '${{matrix.archive_type}}'
          filename: '${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}-${{ matrix.target }}${{matrix.suffix}}'
          path: "./${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}"
          directory: "./target/release"
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "./target/release/${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}-${{ matrix.target }}${{matrix.suffix}}"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
      - uses: actions/upload-artifact@master
        with:
          name: ${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}-${{ matrix.target }}
          path: ./target/release/${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}-${{matrix.target}}${{matrix.suffix}}

